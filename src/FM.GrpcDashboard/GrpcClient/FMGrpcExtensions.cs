// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FMGrpcExtensions.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grpc {

  /// <summary>Holder for reflection information generated from FMGrpcExtensions.proto</summary>
  public static partial class FMGrpcExtensionsReflection {

    #region Descriptor
    /// <summary>File descriptor for FMGrpcExtensions.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FMGrpcExtensionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZGTUdycGNFeHRlbnNpb25zLnByb3RvEgRncnBjIhwKBkluZm9SURISCgpN",
            "ZXRob2ROYW1lGAEgASgJIiAKDE1ldGhvZEluZm9SURIQCghGdWxsTmFtZRgB",
            "IAEoCSI3Cg5NZXRob2RJbnZva2VSURIQCghGdWxsTmFtZRgBIAEoCRITCgtS",
            "ZXF1ZXN0SnNvbhgCIAEoCSI1ChBBZGREZWxUaHJvdHRsZVJREhIKCk1ldGhv",
            "ZE5hbWUYASABKAkSDQoFSXNEZWwYAiABKAgiPwoaQWRkRGVsU2F2ZVJlc3Bv",
            "bnNlRW5hYmxlUlESEgoKTWV0aG9kTmFtZRgBIAEoCRINCgVJc0RlbBgCIAEo",
            "CCJVCgZJbmZvUlMSEQoJSXBBbmRQb3J0GAEgASgJEhEKCVN0YXJ0VGltZRgC",
            "IAEoAxIlCgtNZXRob2RJbmZvcxgDIAMoCzIQLmdycGMuTWV0aG9kSW5mbyJL",
            "CgpNZXRob2RJbmZvEhMKC0lzVGhyb3R0bGVkGAEgASgIEgwKBE5hbWUYAiAB",
            "KAkSGgoSU2F2ZVJlc3BvbnNlRW5hYmxlGAMgASgIIjkKDE1ldGhvZEluZm9S",
            "UxITCgtSZXF1ZXN0SnNvbhgBIAEoCRIUCgxSZXNwb25zZUpzb24YAiABKAki",
            "JgoOTWV0aG9kSW52b2tlUlMSFAoMUmVzcG9uc2VKc29uGAEgASgJIigKBUNt",
            "ZFJTEg4KBlJlc3VsdBgBIAEoCBIPCgdNZXNzYWdlGAIgASgJMqUCCgtCYXNl",
            "U2VydmljZRIiCgRJbmZvEgwuZ3JwYy5JbmZvUlEaDC5ncnBjLkluZm9SUxI0",
            "CgpNZXRob2RJbmZvEhIuZ3JwYy5NZXRob2RJbmZvUlEaEi5ncnBjLk1ldGhv",
            "ZEluZm9SUxI6CgxNZXRob2RJbnZva2USFC5ncnBjLk1ldGhvZEludm9rZVJR",
            "GhQuZ3JwYy5NZXRob2RJbnZva2VSUxI1Cg5BZGREZWxUaHJvdHRsZRIWLmdy",
            "cGMuQWRkRGVsVGhyb3R0bGVSURoLLmdycGMuQ21kUlMSSQoYQWRkRGVsU2F2",
            "ZVJlc3BvbnNlRW5hYmxlEiAuZ3JwYy5BZGREZWxTYXZlUmVzcG9uc2VFbmFi",
            "bGVSURoLLmdycGMuQ21kUlNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.InfoRQ), global::Grpc.InfoRQ.Parser, new[]{ "MethodName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.MethodInfoRQ), global::Grpc.MethodInfoRQ.Parser, new[]{ "FullName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.MethodInvokeRQ), global::Grpc.MethodInvokeRQ.Parser, new[]{ "FullName", "RequestJson" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.AddDelThrottleRQ), global::Grpc.AddDelThrottleRQ.Parser, new[]{ "MethodName", "IsDel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.AddDelSaveResponseEnableRQ), global::Grpc.AddDelSaveResponseEnableRQ.Parser, new[]{ "MethodName", "IsDel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.InfoRS), global::Grpc.InfoRS.Parser, new[]{ "IpAndPort", "StartTime", "MethodInfos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.MethodInfo), global::Grpc.MethodInfo.Parser, new[]{ "IsThrottled", "Name", "SaveResponseEnable" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.MethodInfoRS), global::Grpc.MethodInfoRS.Parser, new[]{ "RequestJson", "ResponseJson" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.MethodInvokeRS), global::Grpc.MethodInvokeRS.Parser, new[]{ "ResponseJson" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.CmdRS), global::Grpc.CmdRS.Parser, new[]{ "Result", "Message" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class InfoRQ : pb::IMessage<InfoRQ> {
    private static readonly pb::MessageParser<InfoRQ> _parser = new pb::MessageParser<InfoRQ>(() => new InfoRQ());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InfoRQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.FMGrpcExtensionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoRQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoRQ(InfoRQ other) : this() {
      methodName_ = other.methodName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoRQ Clone() {
      return new InfoRQ(this);
    }

    /// <summary>Field number for the "MethodName" field.</summary>
    public const int MethodNameFieldNumber = 1;
    private string methodName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MethodName {
      get { return methodName_; }
      set {
        methodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InfoRQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InfoRQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MethodName != other.MethodName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MethodName.Length != 0) hash ^= MethodName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MethodName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MethodName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MethodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MethodName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InfoRQ other) {
      if (other == null) {
        return;
      }
      if (other.MethodName.Length != 0) {
        MethodName = other.MethodName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            MethodName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MethodInfoRQ : pb::IMessage<MethodInfoRQ> {
    private static readonly pb::MessageParser<MethodInfoRQ> _parser = new pb::MessageParser<MethodInfoRQ>(() => new MethodInfoRQ());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MethodInfoRQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.FMGrpcExtensionsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodInfoRQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodInfoRQ(MethodInfoRQ other) : this() {
      fullName_ = other.fullName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodInfoRQ Clone() {
      return new MethodInfoRQ(this);
    }

    /// <summary>Field number for the "FullName" field.</summary>
    public const int FullNameFieldNumber = 1;
    private string fullName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullName {
      get { return fullName_; }
      set {
        fullName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MethodInfoRQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MethodInfoRQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FullName != other.FullName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FullName.Length != 0) hash ^= FullName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FullName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FullName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FullName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MethodInfoRQ other) {
      if (other == null) {
        return;
      }
      if (other.FullName.Length != 0) {
        FullName = other.FullName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            FullName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MethodInvokeRQ : pb::IMessage<MethodInvokeRQ> {
    private static readonly pb::MessageParser<MethodInvokeRQ> _parser = new pb::MessageParser<MethodInvokeRQ>(() => new MethodInvokeRQ());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MethodInvokeRQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.FMGrpcExtensionsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodInvokeRQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodInvokeRQ(MethodInvokeRQ other) : this() {
      fullName_ = other.fullName_;
      requestJson_ = other.requestJson_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodInvokeRQ Clone() {
      return new MethodInvokeRQ(this);
    }

    /// <summary>Field number for the "FullName" field.</summary>
    public const int FullNameFieldNumber = 1;
    private string fullName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullName {
      get { return fullName_; }
      set {
        fullName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RequestJson" field.</summary>
    public const int RequestJsonFieldNumber = 2;
    private string requestJson_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestJson {
      get { return requestJson_; }
      set {
        requestJson_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MethodInvokeRQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MethodInvokeRQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FullName != other.FullName) return false;
      if (RequestJson != other.RequestJson) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FullName.Length != 0) hash ^= FullName.GetHashCode();
      if (RequestJson.Length != 0) hash ^= RequestJson.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FullName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FullName);
      }
      if (RequestJson.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestJson);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FullName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullName);
      }
      if (RequestJson.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestJson);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MethodInvokeRQ other) {
      if (other == null) {
        return;
      }
      if (other.FullName.Length != 0) {
        FullName = other.FullName;
      }
      if (other.RequestJson.Length != 0) {
        RequestJson = other.RequestJson;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            FullName = input.ReadString();
            break;
          }
          case 18: {
            RequestJson = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddDelThrottleRQ : pb::IMessage<AddDelThrottleRQ> {
    private static readonly pb::MessageParser<AddDelThrottleRQ> _parser = new pb::MessageParser<AddDelThrottleRQ>(() => new AddDelThrottleRQ());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddDelThrottleRQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.FMGrpcExtensionsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddDelThrottleRQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddDelThrottleRQ(AddDelThrottleRQ other) : this() {
      methodName_ = other.methodName_;
      isDel_ = other.isDel_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddDelThrottleRQ Clone() {
      return new AddDelThrottleRQ(this);
    }

    /// <summary>Field number for the "MethodName" field.</summary>
    public const int MethodNameFieldNumber = 1;
    private string methodName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MethodName {
      get { return methodName_; }
      set {
        methodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsDel" field.</summary>
    public const int IsDelFieldNumber = 2;
    private bool isDel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDel {
      get { return isDel_; }
      set {
        isDel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddDelThrottleRQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddDelThrottleRQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MethodName != other.MethodName) return false;
      if (IsDel != other.IsDel) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MethodName.Length != 0) hash ^= MethodName.GetHashCode();
      if (IsDel != false) hash ^= IsDel.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MethodName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MethodName);
      }
      if (IsDel != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsDel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MethodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MethodName);
      }
      if (IsDel != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddDelThrottleRQ other) {
      if (other == null) {
        return;
      }
      if (other.MethodName.Length != 0) {
        MethodName = other.MethodName;
      }
      if (other.IsDel != false) {
        IsDel = other.IsDel;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            MethodName = input.ReadString();
            break;
          }
          case 16: {
            IsDel = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddDelSaveResponseEnableRQ : pb::IMessage<AddDelSaveResponseEnableRQ> {
    private static readonly pb::MessageParser<AddDelSaveResponseEnableRQ> _parser = new pb::MessageParser<AddDelSaveResponseEnableRQ>(() => new AddDelSaveResponseEnableRQ());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddDelSaveResponseEnableRQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.FMGrpcExtensionsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddDelSaveResponseEnableRQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddDelSaveResponseEnableRQ(AddDelSaveResponseEnableRQ other) : this() {
      methodName_ = other.methodName_;
      isDel_ = other.isDel_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddDelSaveResponseEnableRQ Clone() {
      return new AddDelSaveResponseEnableRQ(this);
    }

    /// <summary>Field number for the "MethodName" field.</summary>
    public const int MethodNameFieldNumber = 1;
    private string methodName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MethodName {
      get { return methodName_; }
      set {
        methodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsDel" field.</summary>
    public const int IsDelFieldNumber = 2;
    private bool isDel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDel {
      get { return isDel_; }
      set {
        isDel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddDelSaveResponseEnableRQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddDelSaveResponseEnableRQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MethodName != other.MethodName) return false;
      if (IsDel != other.IsDel) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MethodName.Length != 0) hash ^= MethodName.GetHashCode();
      if (IsDel != false) hash ^= IsDel.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MethodName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MethodName);
      }
      if (IsDel != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsDel);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MethodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MethodName);
      }
      if (IsDel != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddDelSaveResponseEnableRQ other) {
      if (other == null) {
        return;
      }
      if (other.MethodName.Length != 0) {
        MethodName = other.MethodName;
      }
      if (other.IsDel != false) {
        IsDel = other.IsDel;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            MethodName = input.ReadString();
            break;
          }
          case 16: {
            IsDel = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InfoRS : pb::IMessage<InfoRS> {
    private static readonly pb::MessageParser<InfoRS> _parser = new pb::MessageParser<InfoRS>(() => new InfoRS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InfoRS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.FMGrpcExtensionsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoRS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoRS(InfoRS other) : this() {
      ipAndPort_ = other.ipAndPort_;
      startTime_ = other.startTime_;
      methodInfos_ = other.methodInfos_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoRS Clone() {
      return new InfoRS(this);
    }

    /// <summary>Field number for the "IpAndPort" field.</summary>
    public const int IpAndPortFieldNumber = 1;
    private string ipAndPort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IpAndPort {
      get { return ipAndPort_; }
      set {
        ipAndPort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "MethodInfos" field.</summary>
    public const int MethodInfosFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Grpc.MethodInfo> _repeated_methodInfos_codec
        = pb::FieldCodec.ForMessage(26, global::Grpc.MethodInfo.Parser);
    private readonly pbc::RepeatedField<global::Grpc.MethodInfo> methodInfos_ = new pbc::RepeatedField<global::Grpc.MethodInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpc.MethodInfo> MethodInfos {
      get { return methodInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InfoRS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InfoRS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IpAndPort != other.IpAndPort) return false;
      if (StartTime != other.StartTime) return false;
      if(!methodInfos_.Equals(other.methodInfos_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IpAndPort.Length != 0) hash ^= IpAndPort.GetHashCode();
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      hash ^= methodInfos_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IpAndPort.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IpAndPort);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTime);
      }
      methodInfos_.WriteTo(output, _repeated_methodInfos_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IpAndPort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IpAndPort);
      }
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      size += methodInfos_.CalculateSize(_repeated_methodInfos_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InfoRS other) {
      if (other == null) {
        return;
      }
      if (other.IpAndPort.Length != 0) {
        IpAndPort = other.IpAndPort;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      methodInfos_.Add(other.methodInfos_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            IpAndPort = input.ReadString();
            break;
          }
          case 16: {
            StartTime = input.ReadInt64();
            break;
          }
          case 26: {
            methodInfos_.AddEntriesFrom(input, _repeated_methodInfos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MethodInfo : pb::IMessage<MethodInfo> {
    private static readonly pb::MessageParser<MethodInfo> _parser = new pb::MessageParser<MethodInfo>(() => new MethodInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MethodInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.FMGrpcExtensionsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodInfo(MethodInfo other) : this() {
      isThrottled_ = other.isThrottled_;
      name_ = other.name_;
      saveResponseEnable_ = other.saveResponseEnable_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodInfo Clone() {
      return new MethodInfo(this);
    }

    /// <summary>Field number for the "IsThrottled" field.</summary>
    public const int IsThrottledFieldNumber = 1;
    private bool isThrottled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsThrottled {
      get { return isThrottled_; }
      set {
        isThrottled_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SaveResponseEnable" field.</summary>
    public const int SaveResponseEnableFieldNumber = 3;
    private bool saveResponseEnable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SaveResponseEnable {
      get { return saveResponseEnable_; }
      set {
        saveResponseEnable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MethodInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MethodInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsThrottled != other.IsThrottled) return false;
      if (Name != other.Name) return false;
      if (SaveResponseEnable != other.SaveResponseEnable) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsThrottled != false) hash ^= IsThrottled.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SaveResponseEnable != false) hash ^= SaveResponseEnable.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsThrottled != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsThrottled);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (SaveResponseEnable != false) {
        output.WriteRawTag(24);
        output.WriteBool(SaveResponseEnable);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsThrottled != false) {
        size += 1 + 1;
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SaveResponseEnable != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MethodInfo other) {
      if (other == null) {
        return;
      }
      if (other.IsThrottled != false) {
        IsThrottled = other.IsThrottled;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SaveResponseEnable != false) {
        SaveResponseEnable = other.SaveResponseEnable;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            IsThrottled = input.ReadBool();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            SaveResponseEnable = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MethodInfoRS : pb::IMessage<MethodInfoRS> {
    private static readonly pb::MessageParser<MethodInfoRS> _parser = new pb::MessageParser<MethodInfoRS>(() => new MethodInfoRS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MethodInfoRS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.FMGrpcExtensionsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodInfoRS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodInfoRS(MethodInfoRS other) : this() {
      requestJson_ = other.requestJson_;
      responseJson_ = other.responseJson_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodInfoRS Clone() {
      return new MethodInfoRS(this);
    }

    /// <summary>Field number for the "RequestJson" field.</summary>
    public const int RequestJsonFieldNumber = 1;
    private string requestJson_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestJson {
      get { return requestJson_; }
      set {
        requestJson_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseJson" field.</summary>
    public const int ResponseJsonFieldNumber = 2;
    private string responseJson_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseJson {
      get { return responseJson_; }
      set {
        responseJson_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MethodInfoRS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MethodInfoRS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestJson != other.RequestJson) return false;
      if (ResponseJson != other.ResponseJson) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestJson.Length != 0) hash ^= RequestJson.GetHashCode();
      if (ResponseJson.Length != 0) hash ^= ResponseJson.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestJson.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RequestJson);
      }
      if (ResponseJson.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResponseJson);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestJson.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestJson);
      }
      if (ResponseJson.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseJson);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MethodInfoRS other) {
      if (other == null) {
        return;
      }
      if (other.RequestJson.Length != 0) {
        RequestJson = other.RequestJson;
      }
      if (other.ResponseJson.Length != 0) {
        ResponseJson = other.ResponseJson;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            RequestJson = input.ReadString();
            break;
          }
          case 18: {
            ResponseJson = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MethodInvokeRS : pb::IMessage<MethodInvokeRS> {
    private static readonly pb::MessageParser<MethodInvokeRS> _parser = new pb::MessageParser<MethodInvokeRS>(() => new MethodInvokeRS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MethodInvokeRS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.FMGrpcExtensionsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodInvokeRS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodInvokeRS(MethodInvokeRS other) : this() {
      responseJson_ = other.responseJson_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodInvokeRS Clone() {
      return new MethodInvokeRS(this);
    }

    /// <summary>Field number for the "ResponseJson" field.</summary>
    public const int ResponseJsonFieldNumber = 1;
    private string responseJson_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseJson {
      get { return responseJson_; }
      set {
        responseJson_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MethodInvokeRS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MethodInvokeRS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResponseJson != other.ResponseJson) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResponseJson.Length != 0) hash ^= ResponseJson.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResponseJson.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResponseJson);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResponseJson.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseJson);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MethodInvokeRS other) {
      if (other == null) {
        return;
      }
      if (other.ResponseJson.Length != 0) {
        ResponseJson = other.ResponseJson;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ResponseJson = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CmdRS : pb::IMessage<CmdRS> {
    private static readonly pb::MessageParser<CmdRS> _parser = new pb::MessageParser<CmdRS>(() => new CmdRS());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CmdRS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.FMGrpcExtensionsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdRS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdRS(CmdRS other) : this() {
      result_ = other.result_;
      message_ = other.message_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdRS Clone() {
      return new CmdRS(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CmdRS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CmdRS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Message != other.Message) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CmdRS other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

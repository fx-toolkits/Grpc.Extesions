// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FMGrpcExtensions.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Grpc {
  public static partial class BaseService
  {
    static readonly string __ServiceName = "grpc.BaseService";

    static readonly Marshaller<global::Grpc.InfoRQ> __Marshaller_InfoRQ = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.InfoRQ.Parser.ParseFrom);
    static readonly Marshaller<global::Grpc.InfoRS> __Marshaller_InfoRS = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.InfoRS.Parser.ParseFrom);
    static readonly Marshaller<global::Grpc.MethodInfoRQ> __Marshaller_MethodInfoRQ = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.MethodInfoRQ.Parser.ParseFrom);
    static readonly Marshaller<global::Grpc.MethodInfoRS> __Marshaller_MethodInfoRS = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.MethodInfoRS.Parser.ParseFrom);
    static readonly Marshaller<global::Grpc.MethodInvokeRQ> __Marshaller_MethodInvokeRQ = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.MethodInvokeRQ.Parser.ParseFrom);
    static readonly Marshaller<global::Grpc.MethodInvokeRS> __Marshaller_MethodInvokeRS = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.MethodInvokeRS.Parser.ParseFrom);
    static readonly Marshaller<global::Grpc.AddDelThrottleRQ> __Marshaller_AddDelThrottleRQ = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.AddDelThrottleRQ.Parser.ParseFrom);
    static readonly Marshaller<global::Grpc.CmdRS> __Marshaller_CmdRS = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.CmdRS.Parser.ParseFrom);
    static readonly Marshaller<global::Grpc.AddDelSaveResponseEnableRQ> __Marshaller_AddDelSaveResponseEnableRQ = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.AddDelSaveResponseEnableRQ.Parser.ParseFrom);

    static readonly Method<global::Grpc.InfoRQ, global::Grpc.InfoRS> __Method_Info = new Method<global::Grpc.InfoRQ, global::Grpc.InfoRS>(
        MethodType.Unary,
        __ServiceName,
        "Info",
        __Marshaller_InfoRQ,
        __Marshaller_InfoRS);

    static readonly Method<global::Grpc.MethodInfoRQ, global::Grpc.MethodInfoRS> __Method_MethodInfo = new Method<global::Grpc.MethodInfoRQ, global::Grpc.MethodInfoRS>(
        MethodType.Unary,
        __ServiceName,
        "MethodInfo",
        __Marshaller_MethodInfoRQ,
        __Marshaller_MethodInfoRS);

    static readonly Method<global::Grpc.MethodInvokeRQ, global::Grpc.MethodInvokeRS> __Method_MethodInvoke = new Method<global::Grpc.MethodInvokeRQ, global::Grpc.MethodInvokeRS>(
        MethodType.Unary,
        __ServiceName,
        "MethodInvoke",
        __Marshaller_MethodInvokeRQ,
        __Marshaller_MethodInvokeRS);

    static readonly Method<global::Grpc.AddDelThrottleRQ, global::Grpc.CmdRS> __Method_AddDelThrottle = new Method<global::Grpc.AddDelThrottleRQ, global::Grpc.CmdRS>(
        MethodType.Unary,
        __ServiceName,
        "AddDelThrottle",
        __Marshaller_AddDelThrottleRQ,
        __Marshaller_CmdRS);

    static readonly Method<global::Grpc.AddDelSaveResponseEnableRQ, global::Grpc.CmdRS> __Method_AddDelSaveResponseEnable = new Method<global::Grpc.AddDelSaveResponseEnableRQ, global::Grpc.CmdRS>(
        MethodType.Unary,
        __ServiceName,
        "AddDelSaveResponseEnable",
        __Marshaller_AddDelSaveResponseEnableRQ,
        __Marshaller_CmdRS);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Grpc.FMGrpcExtensionsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of BaseService</summary>
    public abstract partial class BaseServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Grpc.InfoRS> Info(global::Grpc.InfoRQ request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpc.MethodInfoRS> MethodInfo(global::Grpc.MethodInfoRQ request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpc.MethodInvokeRS> MethodInvoke(global::Grpc.MethodInvokeRQ request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpc.CmdRS> AddDelThrottle(global::Grpc.AddDelThrottleRQ request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpc.CmdRS> AddDelSaveResponseEnable(global::Grpc.AddDelSaveResponseEnableRQ request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BaseService</summary>
    public partial class BaseServiceClient : ClientBase<BaseServiceClient>
    {
      /// <summary>Creates a new client for BaseService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public BaseServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BaseService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public BaseServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected BaseServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected BaseServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Grpc.InfoRS Info(global::Grpc.InfoRQ request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Info(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.InfoRS Info(global::Grpc.InfoRQ request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Info, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Grpc.InfoRS> InfoAsync(global::Grpc.InfoRQ request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return InfoAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Grpc.InfoRS> InfoAsync(global::Grpc.InfoRQ request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Info, null, options, request);
      }
      public virtual global::Grpc.MethodInfoRS MethodInfo(global::Grpc.MethodInfoRQ request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MethodInfo(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.MethodInfoRS MethodInfo(global::Grpc.MethodInfoRQ request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MethodInfo, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Grpc.MethodInfoRS> MethodInfoAsync(global::Grpc.MethodInfoRQ request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MethodInfoAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Grpc.MethodInfoRS> MethodInfoAsync(global::Grpc.MethodInfoRQ request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MethodInfo, null, options, request);
      }
      public virtual global::Grpc.MethodInvokeRS MethodInvoke(global::Grpc.MethodInvokeRQ request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MethodInvoke(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.MethodInvokeRS MethodInvoke(global::Grpc.MethodInvokeRQ request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MethodInvoke, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Grpc.MethodInvokeRS> MethodInvokeAsync(global::Grpc.MethodInvokeRQ request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MethodInvokeAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Grpc.MethodInvokeRS> MethodInvokeAsync(global::Grpc.MethodInvokeRQ request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MethodInvoke, null, options, request);
      }
      public virtual global::Grpc.CmdRS AddDelThrottle(global::Grpc.AddDelThrottleRQ request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddDelThrottle(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.CmdRS AddDelThrottle(global::Grpc.AddDelThrottleRQ request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddDelThrottle, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Grpc.CmdRS> AddDelThrottleAsync(global::Grpc.AddDelThrottleRQ request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddDelThrottleAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Grpc.CmdRS> AddDelThrottleAsync(global::Grpc.AddDelThrottleRQ request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddDelThrottle, null, options, request);
      }
      public virtual global::Grpc.CmdRS AddDelSaveResponseEnable(global::Grpc.AddDelSaveResponseEnableRQ request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddDelSaveResponseEnable(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.CmdRS AddDelSaveResponseEnable(global::Grpc.AddDelSaveResponseEnableRQ request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddDelSaveResponseEnable, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Grpc.CmdRS> AddDelSaveResponseEnableAsync(global::Grpc.AddDelSaveResponseEnableRQ request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddDelSaveResponseEnableAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Grpc.CmdRS> AddDelSaveResponseEnableAsync(global::Grpc.AddDelSaveResponseEnableRQ request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddDelSaveResponseEnable, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override BaseServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BaseServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static ServerServiceDefinition BindService(BaseServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Info, serviceImpl.Info)
          .AddMethod(__Method_MethodInfo, serviceImpl.MethodInfo)
          .AddMethod(__Method_MethodInvoke, serviceImpl.MethodInvoke)
          .AddMethod(__Method_AddDelThrottle, serviceImpl.AddDelThrottle)
          .AddMethod(__Method_AddDelSaveResponseEnable, serviceImpl.AddDelSaveResponseEnable).Build();
    }

  }
}
#endregion
